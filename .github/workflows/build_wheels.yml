name: Build

on:
    push:
        branches:
            - '!master'
            - '!main'
    workflow_dispatch:
    release:
        types:
            - published

env:
    MCPL_VERSION: 1.6.1


jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]

    steps:
    - uses: actions/checkout@v3

    - name: bootstrap_ubuntu
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: |
        sudo apt-get install -y curl
    
    - name: bootstrap_windows
      if: ${{ matrix.os == 'windows-2019' }}
      run: |
        choco install curl xdelta3

    - name: bootstrap_macos
      if: ${{ matrix.os == 'macos-11' }}
      run: echo hello

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.12.1
      env:
        CIBW_BEFORE_ALL_LINUX: "curl --output mcpl.tar.gz -L https://github.com/mctools/mcpl/tarball/master; tar -xvf mcpl.tar.gz --strip-components=1; cmake .; make; make install"
        CIBW_BEFORE_ALL_WINDOWS: >
          curl --output mcpl.zip -L https://github.com/mctools/mcpl/archive/refs/tags/v${{ env.MCPL_VERSION }}.zip &&
          unzip mcpl.zip &&
          cd mcpl-${{ env.MCPL_VERSION }} &&
          cmake . -G "Unix Makefiles" -DMCPL_ENABLE_ZLIB=FETCH &&
          dir &&
          make &&
          make install
      with:
        package-dir: .
        output-dir: wheelhouse
        config-file: "{package}/pyproject.toml"

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.7
        with:
          user: __token__
          password: ${{ secrets.pypitest }}
          repository_url: https://test.pypi.org/legacy/
